{"uid":"17a8741df6c458b8","name":"NonCom - Test page_title","fullName":"testCases.test_UserLogin.Test_Login#test_verify_url_001","historyId":"830e02a940e52dea7aea02bc1d5db44b","time":{"start":1707013029871,"stop":1707013030717,"duration":846},"description":"My test description","descriptionHtml":"<p>My test description</p>\n","status":"failed","statusMessage":"AssertionError: assert False","statusTrace":"self = <testCases.test_UserLogin.Test_Login object at 0x000002766182AD10>\nsetup = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"a0a67f9d-9220-464a-9265-0398134853b7\")>\n\n    @allure.feature('page_title')\n    @allure.story('Verifying the page title')\n    @allure.issue('ABC-123')\n    @allure.link(' https://admin-demo.nopcommerce.com/',name='Orange HRM Website')\n    @allure.title('NonCom - Test page_title')\n    @allure.description('My test description')\n    @allure.link('https://www.example.com')\n    @allure.severity(allure.severity_level.CRITICAL)\n    @pytest.mark.sanity\n    def test_verify_url_001(self, setup):\n        self.log.info(\"Test_case test_verify_url_001 is started\")\n        self.driver = setup\n        self.log.info(\"Opening browser and navigating to demo_nop_com\")\n        self.log.info(\"Page Title is --> \" + self.driver.title)\n        #print(self.driver.title)\n        if self.driver.title == \"Your store. Login1\":\n            self.log.info(\"Test_Case test_verify_url_001 is passed\")\n            self.log.info(\"Taking screenshot\")\n            allure.attach(self.driver.get_screenshot_as_png(), name=\"test_verify_url_001-Pass\",\n                          attachment_type=AttachmentType.PNG)\n            self.driver.save_screenshot(\"..\\\\Screenshots\\\\test_verify_url_001_pass.png\")\n            assert True\n        else:\n            self.log.info(\"Test_Case test_verify_url_001 is failed\")\n            self.log.info(\"Taking screenshot\")\n            allure.attach(self.driver.get_screenshot_as_png(), name=\"test_verify_url_001-Fail\",\n                          attachment_type=AttachmentType.PNG)\n            self.driver.save_screenshot(\"..\\\\Screenshots\\\\test_verify_url_001_fail.png\")\n>           assert False\nE           assert False\n\ntestCases\\test_UserLogin.py:46: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup","time":{"start":1707013007944,"stop":1707013029869,"duration":21925},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"description":"My test description","status":"failed","statusMessage":"AssertionError: assert False","statusTrace":"self = <testCases.test_UserLogin.Test_Login object at 0x000002766182AD10>\nsetup = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"a0a67f9d-9220-464a-9265-0398134853b7\")>\n\n    @allure.feature('page_title')\n    @allure.story('Verifying the page title')\n    @allure.issue('ABC-123')\n    @allure.link(' https://admin-demo.nopcommerce.com/',name='Orange HRM Website')\n    @allure.title('NonCom - Test page_title')\n    @allure.description('My test description')\n    @allure.link('https://www.example.com')\n    @allure.severity(allure.severity_level.CRITICAL)\n    @pytest.mark.sanity\n    def test_verify_url_001(self, setup):\n        self.log.info(\"Test_case test_verify_url_001 is started\")\n        self.driver = setup\n        self.log.info(\"Opening browser and navigating to demo_nop_com\")\n        self.log.info(\"Page Title is --> \" + self.driver.title)\n        #print(self.driver.title)\n        if self.driver.title == \"Your store. Login1\":\n            self.log.info(\"Test_Case test_verify_url_001 is passed\")\n            self.log.info(\"Taking screenshot\")\n            allure.attach(self.driver.get_screenshot_as_png(), name=\"test_verify_url_001-Pass\",\n                          attachment_type=AttachmentType.PNG)\n            self.driver.save_screenshot(\"..\\\\Screenshots\\\\test_verify_url_001_pass.png\")\n            assert True\n        else:\n            self.log.info(\"Test_Case test_verify_url_001 is failed\")\n            self.log.info(\"Taking screenshot\")\n            allure.attach(self.driver.get_screenshot_as_png(), name=\"test_verify_url_001-Fail\",\n                          attachment_type=AttachmentType.PNG)\n            self.driver.save_screenshot(\"..\\\\Screenshots\\\\test_verify_url_001_fail.png\")\n>           assert False\nE           assert False\n\ntestCases\\test_UserLogin.py:46: AssertionError","steps":[],"attachments":[{"uid":"de7bcdccabc00bad","name":"test_verify_url_001-Fail","source":"de7bcdccabc00bad.png","type":"image/png","size":66780},{"uid":"6006440dcd5e639","name":"log","source":"6006440dcd5e639.txt","type":"text/plain","size":839},{"uid":"1ed65a4eb39f5895","name":"stdout","source":"1ed65a4eb39f5895.txt","type":"text/plain","size":27}],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":3},"afterStages":[{"name":"setup::0","time":{"start":1707013030737,"stop":1707013037465,"duration":6728},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"story","value":"Verifying the page title"},{"name":"severity","value":"critical"},{"name":"feature","value":"page_title"},{"name":"tag","value":"sanity"},{"name":"parentSuite","value":"testCases"},{"name":"suite","value":"test_UserLogin"},{"name":"subSuite","value":"Test_Login"},{"name":"host","value":"Tushar-Pc"},{"name":"thread","value":"27788-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testCases.test_UserLogin"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"https://www.example.com","url":"https://www.example.com","type":"link"},{"name":"Orange HRM Website","url":" https://admin-demo.nopcommerce.com/","type":"link"},{"name":"ABC-123","url":"ABC-123","type":"issue"}],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["sanity"]},"source":"17a8741df6c458b8.json","parameterValues":[]}